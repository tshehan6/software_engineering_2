name: Rick O'Hara
date: April 14, 2013
program: Team Stroustrup Project
instructor: Dr. Page
language: ACL2

time log:

	- date: January 17, 2013
	  start time: 10:30AM
	  end time: 11:45AM
	  phase: Project Brainstorming
	  comment: Brainstormed with group about possible project ideas

	- date: January 22, 2013
	  start time: 10:30AM
	  end time: 12:00PM
	  phase: Project Brainstorming
	  comment: Brainstormed with group about possible project ideas, decided on actual project. Will be implementing a poker game in ACL2.

	- date: January 24, 2013
	  start time: 10:30AM
	  end time: 12:00PM
	  phase: Design
	  comment: Worked on top-level design.

	- date: January 29, 2013
	  start time: 10:30AM
	  end time: 12:00PM
	  phase: Design
	  comment: Worked on top-level design.

	- date: January 30, 2013
	  start time: 3:00PM
	  end time: 4:00PM
	  phase: Presentation preparation
	  comment: Met with team to plan project presentation and work on slides.

	- date: February 5, 2013
	  start time: 10:30AM
	  end time: 11:45AM
	  phase: Design
	  comment: Began working on first-level design of the lisp program. 
	  
	- date: February 7, 2013
	  start time: 10:30AM
	  end time: 11:45AM
	  phase: Team design session
	  comment: Finished second-level design.

	- date: February 14, 2013
	  start time: 10:30AM
	  end time: 11:45AM
	  phase: Team design session
	  comment: Second-level design revision team discussion.

	- date: February 19, 2013
	  start time: 10:30AM
	  end time: 11:45AM
	  phase: Team design session
	  comment: Met with Dr. page. Discussed I/O file formatting as a team. 

	- date: February 21, 2013
	  start time: 10:30AM
	  end time: 11:45AM
	  phase: Team design session
	  comment: Worked on defining I/O file format.

	- date: February 28, 2013
	  start time: 10:30AM
	  end time: 11:45AM
	  phase: Team design session
	  comment: Team project implementation.

	- date: March 5, 2013
	  start time: 10:30AM
	  end time: 11:45AM
	  phase: Team design session
	  comment: Progress discussion with Dr. Page.

	- date: March 7, 2013
	  start time: 10:30AM
	  end time: 11:45AM
	  phase: Team design session
	  comment: Team project implementation.

	- date: March 12, 2013
	  start time: 10:30AM
	  end time: 11:45AM
	  phase: Team design session
	  comment: Team project implementation.

	- date: March 26, 2013
	  start time: 10:30AM
	  end time: 11:45AM
	  phase: Team design session
	  comment: Met with Dr. Page. Began working on project timeline.

	- date: March 28, 2013
	  start time: 10:30AM
	  end time: 11:45AM
	  phase: Team design session
	  comment: Began discussing plans for project presentation. Worked on creating timeline for project completion.

	- date: March 29, 2013
	  start time: 12:43PM
	  end time: 2:22PM
	  phase: individual research
	  comment: Researched pseudo-random number generation methods. Specifically looked at middle squares method and linear congruential method. Decided to use linear congruential method for generating random numbers for card shuffling function.

	- date: March 29, 2013
	  start time: 4:20PM
	  end time: 6:18PM
	  phase: individual research
	  comment: Experimented with using sys-call function to create a random number seed generator function. Couldn't get sys-call to work with DrRacket, but could with proof pad. Decided against using sys-call for random number seed. Will use seed generated by python script instead.

	- date: March 30, 2013
	  start time: 9:12AM
	  end time: 10:23AM
	  phase: implementation
	  comment: Designed and coded rand-helper and generate-random functions.

	- date: March 30, 2013
	  start time: 10:30AM
	  end time: 12:08PM	
	  phase: implementation
	  comment: Experimented with using git. Cloned repo from github. Worked on the swap-cards function and defined the *newdeck* constant.

	- date: March 30, 2013
	  start time: 12:11PM
	  end time: 1:25PM
	  phase: implementation
	  comment: Designed & coded the fisher-yates-shuffle function. Ran into & fixed a bug.

	- date: March 30, 2013
	  start time: 1:26PM
	  end time: 2:35PM
	  phase: implementation
	  comment: Modified the shuffle function to work with the entire gamestate, instead of just a deck. Ran into & fixed a bug.

	- date: March 30, 2013
	  start time: 2:36PM
	  end time: 3:10PM
	  phase: documentation
	  comment: Documented the code in the utils.lisp file. Split the until helper functions into a new file. Pushed the day's code to the shared github repo.

	- date: March 30, 2013
	  start time: 4:45PM
	  end time: 5:52PM
	  phase: documentation
	  comment: Updated time log document with time notes from the past two days. Created development journal document.

	- date: March 31, 2013
	  start time: 6:43PM
	  end time: 8:12PM
	  phase: implementation
	  comment: Tried to get proof pad to compile ACL2 code. Running into problems. I think that I might have a version of ACL2 that is causing problems with proof pad. I am also getting an error saying that shuffle-helpers.lisp does not have a valid certificate. It looks like the documentation is saying that this is due to the ACL2 version I am using. Still need to figure out solution.

	- date: April 2, 2013
	  start time: 4:55PM
	  end time: 6:03PM
	  phase: implementation
	  comment: Wrote function on paper for dealing cards to players. Need to put into code once I get proof pad working again. 

	- date: April 2, 2013
	  start time: 7:33PM
	  end time: 7:57PM
	  phase: implementation
	  comment: Figured out problem I was having with proof pad. Issue was caused by a bad git commit.

	- date: April 2, 2013
	  start time: 8:01PM
	  end time: 9:47PM
	  phase: implementation
	  comment: Finished dealPlayerCards, dealFlop, dealTurn, and dealRiver functions. Pushed changed to the git repository. Emailed teammates about changes.

	- date: April 3, 2013
	  start time: 5:53AM
	  end time: 8:02AM
	  phase: implementation
	  comment: Created updateResponseStructForPlayer function to be used by refresh request.

	- date: April 4, 2013
	  start time: 10:40AM
	  end time: 12:00PM
	  phase: Team Design Session
	  comment: Planned through flow of the ACL2 program and made final design decisions. Assigned tasks to complete project.

	- date: April 5, 2013
	  start time: 6:02PM
	  end time: 7:09PM
	  phase: implementation
	  comment: Made changes to utility.lisp to reelect newest changes to structs.lisp. Refactored code from uitlities.lisp and put helper functions into util_helpers.lisp. Committed changes to repo.

	- date: April 6, 2013
	  start time: 11:22AM
	  end time: 12:15PM
	  phase: design
	  comment: Updated design with modifications discussed in Thursday's meeting. Updated structs.lisp to reflect changes.

	- date: April 7, 2013
	  start time: 3:00PM
	  end time: 3:55PM
	  phase: implementation
	  comment: Worked on implementing refresh request. Added refresh_helpers.lisp and moved the refresh helpers to the file. Committed changes to the repo.

	- date: April 7, 2013
	  start time: 3:56PM
	  end time: 4:44PM
	  phase: implementation
	  comment: Studied code base to prepare for integrating modules into main function.

	- date: April 7, 2013
	  start time: 4:45PM
	  end time: 6:23PM
	  phase: implementation
	  comment: Worked on modifying app.html.

	- date: April 8, 2013
	  start time: 6:26PM
	  end time: 9:02PM
	  phase: implementation
	  comment: Created tests for takeTurn. Ran into bug in takeTurn. Found several problems, which are described in the bug for April 8.

	- date: April 9, 2013
	  start time: 6:48AM
	  end time: 8:52PM
	  phase: implementation
	  comment: Continued debugging takeTurn. Problems are described in defect for April 8.

	- date: April 9, 2013
	  start time: 1:45PM
	  end time: 2:41PM
	  phase: implementation
	  comment: Moved on to testing afterTurn (still need to finish debugging makeBet? waiting on Michael to finish debugging his code). Added implemented readyGamestateForNextTurn.

	- date: April 9, 2013
	  start time: 4:13PM
	  end time: 8:02PM
	  phase: implementation
	  comment: Continued debugging and testing takeTurn. Got case working for base bet that does not end a round. Moved on to testing a case where the betting round should be ended.

	- date: April 9, 2013
	  start time: 4:47PM
	  end time: 9:54PM
	  phase: implementation
	  comment: Worked on output functions.

	- date: April 10, 2013
	  start time: 4:32PM
	  end time: 11:14PM
	  phase: implementation
	  comment: Team implementation session to complete project integration.

	- date: April 14, 2013
	  start time: 6:36PM
	  end time: 7:26PM
	  phase: implementation
	  comment: Worked on creating test suit for utilities.lisp. Was unable to due to a problem. Acl2 will not allow testing data within structures. Tests are failing the EQLABLEP guard and never return true, which is a bug.

defect log:

	- date: March 30, 2013
	  type: conceptual
	  fix time: 20
	  comment: Ran into bug where the shuffle function was returning Nil instead of doing useful work. I discovered that I was passing arguments to the fisher-gates-shuffle function in the wrong order, which was causing the input predicates to return false, therefore causing the function to return Nil.

	- date: March 30, 2013
	  type: conceptual
	  fix time: 13
	  comment: The shuffle method was not actually shuffling cards. I discovered that I had been calling the generate-randoms function with a bad input. I was using (len *newdeck*) instead of (len (deck-cards *newdeck*)).

	- date: April 2, 2013
	  type: system error
	  fix time: 113
	  comment:  Proofpad said there was an error with the certificate for the shuffle-helpers.lisp file. Issue was keeping the shuffleDeck function from working. Issue ended up being caused by a bad git commit from a teammate that overwrote my last push. 

	- date: April 8, 2013
	  type: system error
	  fix time: 114
	  comment:  Found error in takeTurn for the bet-1-request test. The current player was not being updated in makeBet. To fix this I created a new function updateCurrentPlayer. Ran into several smaller bugs in getting this to work? including: structure returned by makeBet was not passing gamestate-p test which caused the check in updatePlayer to fail (makeBet structure was incorrect? initially returned a nested gamestate, also added Nil to the head of gamestate-players, also returned an extra level of list nesting on the players list of gamestate).

	- date: April 8, 2013
	  type: system error
	  fix time: 56
	  comment:  Found error in afterTurn. The gamestate was not being returned correctly after the end of a round of betting. Added the readyGamestateForNextTurn to correct this problem.

	- date: April 9, 2013
	  type: system error
	  fix time: 15
	  comment:  Found error in makeBet. Having a player call a bet causes amount-to-call to be increased for all players. It shouldn't affect other players.

	- date: April 10, 2013
	  type: system error
	  fix time: 25
	  comment:  JSONEcode was not working. It did not have the (in-package "ACL2") directive to certify it.

new objects:
	- name: dealHands
	  estimated lines: 52
	  type: calculation

	- name: dealFlop
	  estimated lines: 13
	  type: calculation

	- name: dealTurn
	  estimated lines: 13
	  type: calculation

	- name: dealRiver
	  estimated lines: 13
	  type: calculation

	- name: findPlayerInPlayersList
	  estimated lines: 13
	  type: calculation

actual added lines: 253
actual base lines: 0
actual modified lines: 0
actual removed lines: 0
